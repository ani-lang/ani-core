/*
Los valores de fechas se deben extraer desde el interprete Ani -> Java
Ani por si solo no tiene acceso a herramientas que provean de datos como el tiempo. Esta informaciÃ³n
debe venir desde herramientas que provea el interprete. Lo mismo hace Java, consulta datos a su VM.
Similar a native methods de Java.
*/

class Date:
    days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
    months = ['January', 'February', 'March', 'April', 'May', 'Jun', 'July', 'August', 'September', 'October', 'November', 'December']

    year = 0 # VM.year
    month = 0 # VM.month
    day = 0 # VM.day

    def today() -> Date:
        return new Date()
    end
end

class Time:
    hour = 0 # VM.hour
    minute = 0 # VM.minute
    second = 0 # VM.seconds
    microsecond = 0 # VM.microseconds

    def now() -> Time:
        return new Time()
    end
end

class DateTime:
    date = new Date().today()
    time = new Time().now()

    def now() -> DateTime:
        return new DateTime()
    end

    def strftime(string format) -> string:
        /*
        los metodos que permiten los tipos primitivos se deben implementar como parte del
        interprete.

        Y = format.replace('%Y', date.year)
        m = Y.replace('%m', date.month)
        d = m.replace('%d', date.day)
        A = d.replace('%A', date.days[date.day]
        B = A.replace('%B', date.months[date.month]
        H = B.replace('%H', time.hour)
        M = H.replace('%M', time.minute)
        S = M.replace('%S', time.second)

        return S
        */
        return ''
    end
end
